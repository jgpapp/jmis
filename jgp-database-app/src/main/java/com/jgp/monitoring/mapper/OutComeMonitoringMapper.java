package com.jgp.monitoring.mapper;

import com.jgp.monitoring.domain.OutComeMonitoring;
import com.jgp.monitoring.dto.OutComeMonitoringResponseDto;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.NullValueCheckStrategy;
import org.mapstruct.NullValueMappingStrategy;

import java.util.List;

@Mapper(componentModel = "spring", nullValueMappingStrategy = NullValueMappingStrategy.RETURN_DEFAULT, nullValueCheckStrategy = NullValueCheckStrategy.ALWAYS)
public interface OutComeMonitoringMapper {

    @Mapping(target = "id", expression = "java(outComeMonitoring.getId())")
    @Mapping(target = "surveyDate", expression = "java(outComeMonitoring.getSurveyDate())")
    @Mapping(target = "surveyLanguage", expression = "java(outComeMonitoring.getSurveyLanguage())")
    @Mapping(target = "consented", expression = "java(outComeMonitoring.getConsented())")
    @Mapping(target = "locationLatitude", expression = "java(outComeMonitoring.getLocationLatitude())")
    @Mapping(target = "locationLongitude", expression = "java(outComeMonitoring.getLocationLongitude())")
    @Mapping(target = "participantId", expression = "java(outComeMonitoring.getParticipant() != null ? outComeMonitoring.getParticipant().getId() : null)")
    @Mapping(target = "age", expression = "java(outComeMonitoring.getAge())")
    @Mapping(target = "genderCategory", expression = "java(outComeMonitoring.getGenderCategory())")
    @Mapping(target = "segment", expression = "java(outComeMonitoring.getSegment())")
    @Mapping(target = "partner", expression = "java(outComeMonitoring.getPartner())")
    @Mapping(target = "gender", expression = "java(outComeMonitoring.getGender())")
    @Mapping(target = "region", expression = "java(outComeMonitoring.getRegion())")
    @Mapping(target = "countyCode", expression = "java(outComeMonitoring.getCountyCode())")
    @Mapping(target = "countyName", expression = "java(outComeMonitoring.getCountyName())")
    @Mapping(target = "businessSetting", expression = "java(outComeMonitoring.getBusinessSetting())")
    @Mapping(target = "businessAgeCategory", expression = "java(outComeMonitoring.getBusinessAgeCategory())")
    @Mapping(target = "groupMembership", expression = "java(outComeMonitoring.getGroupMembership())")
    @Mapping(target = "educationLevel", expression = "java(outComeMonitoring.getEducationLevel())")
    @Mapping(target = "businessAge", expression = "java(outComeMonitoring.getBusinessAge())")
    @Mapping(target = "regularEmployees", expression = "java(outComeMonitoring.getRegularEmployees())")
    @Mapping(target = "casualEmployees", expression = "java(outComeMonitoring.getCasualEmployees())")
    @Mapping(target = "householdIncomeChange", expression = "java(outComeMonitoring.getHouseholdIncomeChange())")
    @Mapping(target = "financialStability", expression = "java(outComeMonitoring.getFinancialStability())")
    @Mapping(target = "qualityOfLife", expression = "java(outComeMonitoring.getQualityOfLife())")
    @Mapping(target = "empowerment", expression = "java(outComeMonitoring.getEmpowerment())")
    @Mapping(target = "voiceInCommunity", expression = "java(outComeMonitoring.getVoiceInCommunity())")
    @Mapping(target = "respectInCommunity", expression = "java(outComeMonitoring.getRespectInCommunity())")
    @Mapping(target = "reliableIncome", expression = "java(outComeMonitoring.getReliableIncome())")
    @Mapping(target = "reputableWork", expression = "java(outComeMonitoring.getReputableWork())")
    @Mapping(target = "senseOfPurpose", expression = "java(outComeMonitoring.getSenseOfPurpose())")
    @Mapping(target = "businessSectorGrowth", expression = "java(outComeMonitoring.getBusinessSectorGrowth())")
    @Mapping(target = "communityGrowth", expression = "java(outComeMonitoring.getCommunityGrowth())")
    @Mapping(target = "workOpportunities", expression = "java(outComeMonitoring.getWorkOpportunities())")
    @Mapping(target = "incomeRegularity", expression = "java(outComeMonitoring.getIncomeRegularity())")
    @Mapping(target = "incomeSufficiency", expression = "java(outComeMonitoring.getIncomeSufficiency())")
    @Mapping(target = "incomePredictability", expression = "java(outComeMonitoring.getIncomePredictability())")
    @Mapping(target = "financialSecurity", expression = "java(outComeMonitoring.getFinancialSecurity())")
    @Mapping(target = "communityGroups", expression = "java(outComeMonitoring.getCommunityGroups())")
    @Mapping(target = "leadershipRole", expression = "java(outComeMonitoring.getLeadershipRole())")
    @Mapping(target = "decisionMakingConfidence", expression = "java(outComeMonitoring.getDecisionMakingConfidence())")
    @Mapping(target = "communityChange", expression = "java(outComeMonitoring.getCommunityChange())")
    @Mapping(target = "communityIssues", expression = "java(outComeMonitoring.getCommunityIssues())")
    @Mapping(target = "satisfactionEducation", expression = "java(outComeMonitoring.getSatisfactionEducation())")
    @Mapping(target = "satisfactionRelationships", expression = "java(outComeMonitoring.getSatisfactionRelationships())")
    @Mapping(target = "satisfactionBusinessType", expression = "java(outComeMonitoring.getSatisfactionBusinessType())")
    @Mapping(target = "satisfactionIncome", expression = "java(outComeMonitoring.getSatisfactionIncome())")
    @Mapping(target = "satisfactionHousing", expression = "java(outComeMonitoring.getSatisfactionHousing())")
    @Mapping(target = "satisfactionHealthcare", expression = "java(outComeMonitoring.getSatisfactionHealthcare())")
    @Mapping(target = "satisfactionWater", expression = "java(outComeMonitoring.getSatisfactionWater())")
    @Mapping(target = "satisfactionFood", expression = "java(outComeMonitoring.getSatisfactionFood())")
    @Mapping(target = "satisfactionNutrition", expression = "java(outComeMonitoring.getSatisfactionNutrition())")
    @Mapping(target = "satisfactionLife", expression = "java(outComeMonitoring.getSatisfactionLife())")
    @Mapping(target = "satisfactionInformation", expression = "java(outComeMonitoring.getSatisfactionInformation())")
    @Mapping(target = "satisfactionLeisure", expression = "java(outComeMonitoring.getSatisfactionLeisure())")
    @Mapping(target = "jgpInterventions", expression = "java(outComeMonitoring.getJgpInterventions())")
    @Mapping(target = "technicalTraining", expression = "java(outComeMonitoring.getTechnicalTraining())")
    @Mapping(target = "newPractices", expression = "java(outComeMonitoring.getNewPractices())")
    @Mapping(target = "improvedPractices", expression = "java(outComeMonitoring.getImprovedPractices())")
    @Mapping(target = "trainingImprovements", expression = "java(outComeMonitoring.getTrainingImprovements())")
    @Mapping(target = "businessChanges", expression = "java(outComeMonitoring.getBusinessChanges())")
    @Mapping(target = "profitabilityGrowth", expression = "java(outComeMonitoring.getProfitabilityGrowth())")
    @Mapping(target = "revenueChange", expression = "java(outComeMonitoring.getRevenueChange())")
    @Mapping(target = "loanApplication", expression = "java(outComeMonitoring.getLoanApplication())")
    @Mapping(target = "numberOfLoans", expression = "java(outComeMonitoring.getNumberOfLoans())")
    @Mapping(target = "loanPlatform", expression = "java(outComeMonitoring.getLoanPlatform())")
    @Mapping(target = "externalFinancing", expression = "java(outComeMonitoring.getExternalFinancing())")
    @Mapping(target = "financingSources", expression = "java(outComeMonitoring.getFinancingSources())")
    @Mapping(target = "jgpImpact", expression = "java(outComeMonitoring.getJgpImpact())")
    @Mapping(target = "changesWithoutJgp", expression = "java(outComeMonitoring.getChangesWithoutJgp())")
    @Mapping(target = "marketAccess", expression = "java(outComeMonitoring.getMarketAccess())")
    @Mapping(target = "businessOpportunities", expression = "java(outComeMonitoring.getBusinessOpportunities())")
    @Mapping(target = "marketChallenges", expression = "java(outComeMonitoring.getMarketChallenges())")
    @Mapping(target = "uploadedBy", expression = "java(null != outComeMonitoring.getCreatedBy() ? outComeMonitoring.getCreatedBy().getUserFullName() : null)")
    @Mapping(target = "dateUploaded", expression = "java(null != outComeMonitoring.getDateCreated() ? outComeMonitoring.getDateCreated() : null)")
    @Mapping(target = "approvedBy", expression = "java(null != outComeMonitoring.getApprovalBy() ? outComeMonitoring.getApprovalBy().getUserFullName() : null)")
    @Mapping(target = "dateApproved", expression = "java(null != outComeMonitoring.getDateApproved() ? outComeMonitoring.getDateApproved() : null)")
    OutComeMonitoringResponseDto toDto(OutComeMonitoring outComeMonitoring);

    List<OutComeMonitoringResponseDto> toDto(List<OutComeMonitoring> outComeMonitoringList);
}
